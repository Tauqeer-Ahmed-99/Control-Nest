/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

export const Colors = {
  light: {
    colors: {
      primary: "rgb(87, 76, 196)",
      onPrimary: "rgb(255, 255, 255)",
      primaryContainer: "rgb(227, 223, 255)",
      onPrimaryContainer: "rgb(20, 0, 103)",
      secondary: "rgb(0, 95, 175)",
      onSecondary: "rgb(255, 255, 255)",
      secondaryContainer: "rgb(212, 227, 255)",
      onSecondaryContainer: "rgb(0, 28, 58)",
      tertiary: "rgb(0, 104, 116)",
      onTertiary: "rgb(255, 255, 255)",
      tertiaryContainer: "rgb(151, 240, 255)",
      onTertiaryContainer: "rgb(0, 31, 36)",
      error: "rgb(186, 26, 26)",
      onError: "rgb(255, 255, 255)",
      errorContainer: "rgb(255, 218, 214)",
      onErrorContainer: "rgb(65, 0, 2)",
      background: "rgb(255, 251, 255)",
      onBackground: "rgb(28, 27, 31)",
      surface: "rgb(255, 251, 255)",
      onSurface: "rgb(28, 27, 31)",
      surfaceVariant: "rgb(229, 225, 236)",
      onSurfaceVariant: "rgb(71, 70, 79)",
      outline: "rgb(120, 118, 128)",
      outlineVariant: "rgb(200, 197, 208)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(49, 48, 52)",
      inverseOnSurface: "rgb(244, 239, 244)",
      inversePrimary: "rgb(197, 192, 255)",
      elevation: {
        level0: "transparent",
        level1: "rgb(247, 242, 252)",
        level2: "rgb(242, 237, 250)",
        level3: "rgb(237, 232, 249)",
        level4: "rgb(235, 230, 248)",
        level5: "rgb(232, 227, 247)",
      },
      surfaceDisabled: "rgba(28, 27, 31, 0.12)",
      onSurfaceDisabled: "rgba(28, 27, 31, 0.38)",
      backdrop: "rgba(49, 47, 56, 0.4)",
    },
  },
  dark: {
    colors: {
      primary: "rgb(197, 192, 255)",
      onPrimary: "rgb(39, 16, 150)",
      primaryContainer: "rgb(62, 50, 171)",
      onPrimaryContainer: "rgb(227, 223, 255)",
      secondary: "rgb(165, 200, 255)",
      onSecondary: "rgb(0, 49, 95)",
      secondaryContainer: "rgb(0, 71, 134)",
      onSecondaryContainer: "rgb(212, 227, 255)",
      tertiary: "rgb(79, 216, 235)",
      onTertiary: "rgb(0, 54, 61)",
      tertiaryContainer: "rgb(0, 79, 88)",
      onTertiaryContainer: "rgb(151, 240, 255)",
      error: "rgb(255, 180, 171)",
      onError: "rgb(105, 0, 5)",
      errorContainer: "rgb(147, 0, 10)",
      onErrorContainer: "rgb(255, 180, 171)",
      background: "rgb(28, 27, 31)",
      onBackground: "rgb(229, 225, 230)",
      surface: "rgb(28, 27, 31)",
      onSurface: "rgb(229, 225, 230)",
      surfaceVariant: "rgb(71, 70, 79)",
      onSurfaceVariant: "rgb(200, 197, 208)",
      outline: "rgb(146, 143, 153)",
      outlineVariant: "rgb(71, 70, 79)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(229, 225, 230)",
      inverseOnSurface: "rgb(49, 48, 52)",
      inversePrimary: "rgb(87, 76, 196)",
      elevation: {
        level0: "transparent",
        level1: "rgb(36, 35, 42)",
        level2: "rgb(42, 40, 49)",
        level3: "rgb(47, 45, 56)",
        level4: "rgb(48, 47, 58)",
        level5: "rgb(52, 50, 62)",
      },
      surfaceDisabled: "rgba(229, 225, 230, 0.12)",
      onSurfaceDisabled: "rgba(229, 225, 230, 0.38)",
      backdrop: "rgba(49, 47, 56, 0.4)",
    },
  },
};
